import 'package:freezed_annotation/freezed_annotation.dart';

part 'item_model.freezed.dart';
part 'item_model.g.dart';

@freezed
class ItemModel with _$ItemModel {
  const factory ItemModel({
    @JsonKey(name: 'name') String? name,
    @JsonKey(name: 'owner') String? owner,
    @JsonKey(name: 'creation') String? creation,
    @JsonKey(name: 'modified') String? modified,
    @JsonKey(name: 'modified_by') String? modifiedBy,
    @JsonKey(name: 'docstatus') int? docstatus,
    @JsonKey(name: 'idx') int? idx,
    @JsonKey(name: 'naming_series') String? namingSeries,
    @JsonKey(name: 'item_code') String? itemCode,
    @JsonKey(name: 'item_name') String? itemName,
    @JsonKey(name: 'item_group') String? itemGroup,
    @JsonKey(name: 'gst_hsn_code') String? gstHsnCode,
    @JsonKey(name: 'stock_uom') String? stockUom,
    @JsonKey(name: 'custom_gate_number') String? customGateNumber,
    @JsonKey(name: 'disabled') int? disabled,
    @JsonKey(name: 'allow_alternative_item') int? allowAlternativeItem,
    @JsonKey(name: 'is_stock_item') int? isStockItem,
    @JsonKey(name: 'has_variants') int? hasVariants,
    @JsonKey(name: 'opening_stock') double? openingStock,
    @JsonKey(name: 'valuation_rate') double? valuationRate,
    @JsonKey(name: 'standard_rate') double? standardRate,
    @JsonKey(name: 'is_fixed_asset') int? isFixedAsset,
    @JsonKey(name: 'auto_create_assets') int? autoCreateAssets,
    @JsonKey(name: 'is_grouped_asset') int? isGroupedAsset,
    @JsonKey(name: 'asset_category') String? assetCategory,
    @JsonKey(name: 'asset_naming_series') String? assetNamingSeries,
    @JsonKey(name: 'over_delivery_receipt_allowance') double? overDeliveryReceiptAllowance,
    @JsonKey(name: 'over_billing_allowance') double? overBillingAllowance,
    @JsonKey(name: 'image') String? image,
    @JsonKey(name: 'description') String? description,
    @JsonKey(name: 'brand') String? brand,
    @JsonKey(name: 'shelf_life_in_days') int? shelfLifeInDays,
    @JsonKey(name: 'end_of_life') String? endOfLife,
    @JsonKey(name: 'default_material_request_type') String? defaultMaterialRequestType,
    @JsonKey(name: 'valuation_method') String? valuationMethod,
    @JsonKey(name: 'warranty_period') int? warrantyPeriod,
    @JsonKey(name: 'weight_per_unit') double? weightPerUnit,
    @JsonKey(name: 'weight_uom') String? weightUom,
    @JsonKey(name: 'allow_negative_stock') int? allowNegativeStock,
    @JsonKey(name: 'has_batch_no') int? hasBatchNo,
    @JsonKey(name: 'create_new_batch') int? createNewBatch,
    @JsonKey(name: 'batch_number_series') String? batchNumberSeries,
    @JsonKey(name: 'has_expiry_date') int? hasExpiryDate,
    @JsonKey(name: 'retain_sample') int? retainSample,
    @JsonKey(name: 'sample_quantity') int? sampleQuantity,
    @JsonKey(name: 'has_serial_no') int? hasSerialNo,
    @JsonKey(name: 'serial_no_series') String? serialNoSeries,
    @JsonKey(name: 'variant_of') String? variantOf,
    @JsonKey(name: 'variant_based_on') String? variantBasedOn,
    @JsonKey(name: 'enable_deferred_expense') int? enableDeferredExpense,
    @JsonKey(name: 'no_of_months_exp') int? noOfMonthsExp,
    @JsonKey(name: 'enable_deferred_revenue') int? enableDeferredRevenue,
    @JsonKey(name: 'no_of_months') int? noOfMonths,
    @JsonKey(name: 'purchase_uom') String? purchaseUom,
    @JsonKey(name: 'min_order_qty') double? minOrderQty,
    @JsonKey(name: 'safety_stock') double? safetyStock,
    @JsonKey(name: 'is_purchase_item') int? isPurchaseItem,
    @JsonKey(name: 'lead_time_days') int? leadTimeDays,
    @JsonKey(name: 'last_purchase_rate') double? lastPurchaseRate,
    @JsonKey(name: 'is_customer_provided_item') int? isCustomerProvidedItem,
    @JsonKey(name: 'customer') String? customer,
    @JsonKey(name: 'delivered_by_supplier') int? deliveredBySupplier,
    @JsonKey(name: 'country_of_origin') String? countryOfOrigin,
    @JsonKey(name: 'customs_tariff_number') String? customsTariffNumber,
    @JsonKey(name: 'sales_uom') String? salesUom,
    @JsonKey(name: 'grant_commission') int? grantCommission,
    @JsonKey(name: 'is_sales_item') int? isSalesItem,
    @JsonKey(name: 'max_discount') double? maxDiscount,
    @JsonKey(name: 'is_ineligible_for_itc') int? isIneligibleForItc,
    @JsonKey(name: 'inspection_required_before_purchase') int? inspectionRequiredBeforePurchase,
    @JsonKey(name: 'quality_inspection_template') String? qualityInspectionTemplate,
    @JsonKey(name: 'inspection_required_before_delivery') int? inspectionRequiredBeforeDelivery,
    @JsonKey(name: 'include_item_in_manufacturing') int? includeItemInManufacturing,
    @JsonKey(name: 'is_sub_contracted_item') int? isSubContractedItem,
    @JsonKey(name: 'default_bom') String? defaultBom,
    @JsonKey(name: 'customer_code') String? customerCode,
    @JsonKey(name: 'default_item_manufacturer') String? defaultItemManufacturer,
    @JsonKey(name: 'default_manufacturer_part_no') String? defaultManufacturerPartNo,
    @JsonKey(name: 'total_projected_qty') double? totalProjectedQty,
  }) = _ItemModel;

  factory ItemModel.fromJson(Map<String, dynamic> json) => _$ItemModelFromJson(json);
}
