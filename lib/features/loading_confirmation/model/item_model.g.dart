// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'item_model.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

_$ItemModelImpl _$$ItemModelImplFromJson(
  Map<String, dynamic> json,
) => _$ItemModelImpl(
  name: json['name'] as String?,
  owner: json['owner'] as String?,
  creation: json['creation'] as String?,
  modified: json['modified'] as String?,
  modifiedBy: json['modified_by'] as String?,
  docstatus: (json['docstatus'] as num?)?.toInt(),
  idx: (json['idx'] as num?)?.toInt(),
  namingSeries: json['naming_series'] as String?,
  itemCode: json['item_code'] as String?,
  itemName: json['item_name'] as String?,
  itemGroup: json['item_group'] as String?,
  gstHsnCode: json['gst_hsn_code'] as String?,
  stockUom: json['stock_uom'] as String?,
  customGateNumber: json['custom_gate_number'] as String?,
  disabled: (json['disabled'] as num?)?.toInt(),
  allowAlternativeItem: (json['allow_alternative_item'] as num?)?.toInt(),
  isStockItem: (json['is_stock_item'] as num?)?.toInt(),
  hasVariants: (json['has_variants'] as num?)?.toInt(),
  openingStock: (json['opening_stock'] as num?)?.toDouble(),
  valuationRate: (json['valuation_rate'] as num?)?.toDouble(),
  standardRate: (json['standard_rate'] as num?)?.toDouble(),
  isFixedAsset: (json['is_fixed_asset'] as num?)?.toInt(),
  autoCreateAssets: (json['auto_create_assets'] as num?)?.toInt(),
  isGroupedAsset: (json['is_grouped_asset'] as num?)?.toInt(),
  assetCategory: json['asset_category'] as String?,
  assetNamingSeries: json['asset_naming_series'] as String?,
  overDeliveryReceiptAllowance:
      (json['over_delivery_receipt_allowance'] as num?)?.toDouble(),
  overBillingAllowance: (json['over_billing_allowance'] as num?)?.toDouble(),
  image: json['image'] as String?,
  description: json['description'] as String?,
  brand: json['brand'] as String?,
  shelfLifeInDays: (json['shelf_life_in_days'] as num?)?.toInt(),
  endOfLife: json['end_of_life'] as String?,
  defaultMaterialRequestType: json['default_material_request_type'] as String?,
  valuationMethod: json['valuation_method'] as String?,
  warrantyPeriod: (json['warranty_period'] as num?)?.toInt(),
  weightPerUnit: (json['weight_per_unit'] as num?)?.toDouble(),
  weightUom: json['weight_uom'] as String?,
  allowNegativeStock: (json['allow_negative_stock'] as num?)?.toInt(),
  hasBatchNo: (json['has_batch_no'] as num?)?.toInt(),
  createNewBatch: (json['create_new_batch'] as num?)?.toInt(),
  batchNumberSeries: json['batch_number_series'] as String?,
  hasExpiryDate: (json['has_expiry_date'] as num?)?.toInt(),
  retainSample: (json['retain_sample'] as num?)?.toInt(),
  sampleQuantity: (json['sample_quantity'] as num?)?.toInt(),
  hasSerialNo: (json['has_serial_no'] as num?)?.toInt(),
  serialNoSeries: json['serial_no_series'] as String?,
  variantOf: json['variant_of'] as String?,
  variantBasedOn: json['variant_based_on'] as String?,
  enableDeferredExpense: (json['enable_deferred_expense'] as num?)?.toInt(),
  noOfMonthsExp: (json['no_of_months_exp'] as num?)?.toInt(),
  enableDeferredRevenue: (json['enable_deferred_revenue'] as num?)?.toInt(),
  noOfMonths: (json['no_of_months'] as num?)?.toInt(),
  purchaseUom: json['purchase_uom'] as String?,
  minOrderQty: (json['min_order_qty'] as num?)?.toDouble(),
  safetyStock: (json['safety_stock'] as num?)?.toDouble(),
  isPurchaseItem: (json['is_purchase_item'] as num?)?.toInt(),
  leadTimeDays: (json['lead_time_days'] as num?)?.toInt(),
  lastPurchaseRate: (json['last_purchase_rate'] as num?)?.toDouble(),
  isCustomerProvidedItem: (json['is_customer_provided_item'] as num?)?.toInt(),
  customer: json['customer'] as String?,
  deliveredBySupplier: (json['delivered_by_supplier'] as num?)?.toInt(),
  countryOfOrigin: json['country_of_origin'] as String?,
  customsTariffNumber: json['customs_tariff_number'] as String?,
  salesUom: json['sales_uom'] as String?,
  grantCommission: (json['grant_commission'] as num?)?.toInt(),
  isSalesItem: (json['is_sales_item'] as num?)?.toInt(),
  maxDiscount: (json['max_discount'] as num?)?.toDouble(),
  isIneligibleForItc: (json['is_ineligible_for_itc'] as num?)?.toInt(),
  inspectionRequiredBeforePurchase:
      (json['inspection_required_before_purchase'] as num?)?.toInt(),
  qualityInspectionTemplate: json['quality_inspection_template'] as String?,
  inspectionRequiredBeforeDelivery:
      (json['inspection_required_before_delivery'] as num?)?.toInt(),
  includeItemInManufacturing:
      (json['include_item_in_manufacturing'] as num?)?.toInt(),
  isSubContractedItem: (json['is_sub_contracted_item'] as num?)?.toInt(),
  defaultBom: json['default_bom'] as String?,
  customerCode: json['customer_code'] as String?,
  defaultItemManufacturer: json['default_item_manufacturer'] as String?,
  defaultManufacturerPartNo: json['default_manufacturer_part_no'] as String?,
  totalProjectedQty: (json['total_projected_qty'] as num?)?.toDouble(),
);

Map<String, dynamic> _$$ItemModelImplToJson(_$ItemModelImpl instance) =>
    <String, dynamic>{
      'name': instance.name,
      'owner': instance.owner,
      'creation': instance.creation,
      'modified': instance.modified,
      'modified_by': instance.modifiedBy,
      'docstatus': instance.docstatus,
      'idx': instance.idx,
      'naming_series': instance.namingSeries,
      'item_code': instance.itemCode,
      'item_name': instance.itemName,
      'item_group': instance.itemGroup,
      'gst_hsn_code': instance.gstHsnCode,
      'stock_uom': instance.stockUom,
      'custom_gate_number': instance.customGateNumber,
      'disabled': instance.disabled,
      'allow_alternative_item': instance.allowAlternativeItem,
      'is_stock_item': instance.isStockItem,
      'has_variants': instance.hasVariants,
      'opening_stock': instance.openingStock,
      'valuation_rate': instance.valuationRate,
      'standard_rate': instance.standardRate,
      'is_fixed_asset': instance.isFixedAsset,
      'auto_create_assets': instance.autoCreateAssets,
      'is_grouped_asset': instance.isGroupedAsset,
      'asset_category': instance.assetCategory,
      'asset_naming_series': instance.assetNamingSeries,
      'over_delivery_receipt_allowance': instance.overDeliveryReceiptAllowance,
      'over_billing_allowance': instance.overBillingAllowance,
      'image': instance.image,
      'description': instance.description,
      'brand': instance.brand,
      'shelf_life_in_days': instance.shelfLifeInDays,
      'end_of_life': instance.endOfLife,
      'default_material_request_type': instance.defaultMaterialRequestType,
      'valuation_method': instance.valuationMethod,
      'warranty_period': instance.warrantyPeriod,
      'weight_per_unit': instance.weightPerUnit,
      'weight_uom': instance.weightUom,
      'allow_negative_stock': instance.allowNegativeStock,
      'has_batch_no': instance.hasBatchNo,
      'create_new_batch': instance.createNewBatch,
      'batch_number_series': instance.batchNumberSeries,
      'has_expiry_date': instance.hasExpiryDate,
      'retain_sample': instance.retainSample,
      'sample_quantity': instance.sampleQuantity,
      'has_serial_no': instance.hasSerialNo,
      'serial_no_series': instance.serialNoSeries,
      'variant_of': instance.variantOf,
      'variant_based_on': instance.variantBasedOn,
      'enable_deferred_expense': instance.enableDeferredExpense,
      'no_of_months_exp': instance.noOfMonthsExp,
      'enable_deferred_revenue': instance.enableDeferredRevenue,
      'no_of_months': instance.noOfMonths,
      'purchase_uom': instance.purchaseUom,
      'min_order_qty': instance.minOrderQty,
      'safety_stock': instance.safetyStock,
      'is_purchase_item': instance.isPurchaseItem,
      'lead_time_days': instance.leadTimeDays,
      'last_purchase_rate': instance.lastPurchaseRate,
      'is_customer_provided_item': instance.isCustomerProvidedItem,
      'customer': instance.customer,
      'delivered_by_supplier': instance.deliveredBySupplier,
      'country_of_origin': instance.countryOfOrigin,
      'customs_tariff_number': instance.customsTariffNumber,
      'sales_uom': instance.salesUom,
      'grant_commission': instance.grantCommission,
      'is_sales_item': instance.isSalesItem,
      'max_discount': instance.maxDiscount,
      'is_ineligible_for_itc': instance.isIneligibleForItc,
      'inspection_required_before_purchase':
          instance.inspectionRequiredBeforePurchase,
      'quality_inspection_template': instance.qualityInspectionTemplate,
      'inspection_required_before_delivery':
          instance.inspectionRequiredBeforeDelivery,
      'include_item_in_manufacturing': instance.includeItemInManufacturing,
      'is_sub_contracted_item': instance.isSubContractedItem,
      'default_bom': instance.defaultBom,
      'customer_code': instance.customerCode,
      'default_item_manufacturer': instance.defaultItemManufacturer,
      'default_manufacturer_part_no': instance.defaultManufacturerPartNo,
      'total_projected_qty': instance.totalProjectedQty,
    };
